David - odklad nepoužívanejch metod a promìnnejch.. :D



NAHODNY BUTTON REFERENCE_
mB1A,mB1B,mB2A,mB2B,mB3A,mB3B,mB4A,mB4B,mB5A,mB5B,mB6A,mB6B


		// boolean ButtonHoverRender[x] normalne false vsechno.
		// For - If loop, projede lokace kde by ta mys mela bejt aby nad necim
		// hoverovala, pokud nekde tam bude, nastavi ten boolean na true
		// vsechny ostatni da zase false
		
		// for loop kterej projede jestli nekterej z tech booleanu je True,
		// pokud jo, vyrenderuje ten hover na jeho miste.
		// je v tom docela dost matiky s pozicema, hodne stesti! :D

DRAW MENUBAR OLD_
//		menubar.draw(
//				(int) (((game.getContainer().getWidth()) / 2) - ((menubar
//						.getWidth() * 0.125))),
//				(int) ((game.getContainer().getHeight()) - menubar.getHeight() * .25),
//				(float) 0.25);


MENUSCALE DEBUG_
System.out.println("container width "+  game.getContainer().getWidth() + " | sprite sheet width " + buttonSpriteSheet.getWidth() + " | menuScale " + menuScale);

270 - diametr cudliku
135 - radius cudliku
buttonsX = (int) (menuX + 600 * menuScale);
		buttonsY = (int) ((appHeight - (120 * menuScale) - 135 * menuScale));
		buttonsOffset = (int) (500 * menuScale);


(x-center_x)^2 + (y - center_y)^2 < radius^2.

		
//		int square_dist = (x - (buttonsX + (buttonsOffset * 1)))*(x - (buttonsX + (buttonsOffset * 1)))
//				+(y - buttonsY)*(y - buttonsY);
//		if (square_dist <= (buttonRadius*buttonRadius)) {
//			System.out.println("BUM NASEL JSEM TO LOL " + 1);


//				System.out.println("BUM NASEL JSEM TO LOL " + a);
//				System.out.println(square_dist);




hover
//			if (a != hover) {
//				menuButtons.getSprite(a, 0).drawCentered(
//						buttonsX + (buttonsOffset * a), buttonsY);
//
//			} else {
//				menuButtons.getSprite(a, 1).drawCentered(
//						buttonsX + (buttonsOffset * a), buttonsY);






glowF = (float) (glowF + .02);
			glow = (int) glowF;
			if (glowF > 7)
				glowF = 0;
			drawMenu(glow, g);